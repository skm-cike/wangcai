<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
        xmlns:security="http://www.springframework.org/schema/security"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans   
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security   
                http://www.springframework.org/schema/security/spring-security.xsd">

   	<security:http pattern="/css/**"  security="none"  />
	<security:http pattern="/images/**"  security="none" />
	<security:http pattern="/img/**"  security="none" />
	<security:http pattern="/js/**"  security="none" />
	<security:http pattern="/include.jsp"  security="none"/>
    <!--<security:http pattern="/user/login.do"  security="none"/>-->
	<!--<security:http pattern="/login.jsp"  security="none"/>-->

	<security:http auto-config="true"  access-decision-manager-ref="wangcai_accessDecisionManager" use-expressions="true">
        <!--<security:intercept-url pattern="/login.jsp" access="isAnonymous()" />-->
        <!--<security:intercept-url pattern="/user/login.do" access="isAnonymous()" />-->
        <security:intercept-url pattern="/**" access="isAuthenticated()"></security:intercept-url>
        <security:csrf disabled="true"></security:csrf>
        <security:access-denied-handler ref="defaultAccessDecisionManager"/>
        <security:custom-filter ref="wangcaiFilter" before="FILTER_SECURITY_INTERCEPTOR" />

        <security:session-management session-fixation-protection="migrateSession" invalid-session-url="/login.jsp">
            <security:concurrency-control max-sessions="1" />
        </security:session-management>

        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             username-parameter="login"
                             password-parameter="password"
                             default-target-url="index.jsp"
                             authentication-success-handler-ref="authSuccess"
                             authentication-failure-url="/login.jsp?errorMsg=user or password error"/>

        <security:logout invalidate-session="true"
                         logout-success-url="/"
                         logout-url="/logout"
                         delete-cookies="JSESSIONID" />
	</security:http>

	<bean id="authSuccess" class="com.wangcai.common.authority.AuthSuccessHandler"></bean>

	<bean id="defaultAccessDecisionManager" class="com.wangcai.common.authority.DefaultAccessDeniedHandler">
		<property name="errorPage"  value="/error_403.jsp"></property>
	</bean>

    <!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <security:authentication-manager  alias="wangcai_authenticationManager" >
        <security:authentication-provider user-service-ref="wangcai_userDetailService">
            <security:password-encoder hash="md5" >
                <security:salt-source user-property="login"/>
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

     <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 我们的所有控制将在这三个类中实现，解释详见具体配置  -->
    <bean id="wangcaiFilter" class="com.wangcai.common.authority.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="wangcai_authenticationManager" />
        <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源     -->
        <property name="accessDecisionManager" ref="wangcai_accessDecisionManager" />
        <property name="securityMetadataSource" ref="wangcai_securityMetadataSource" />
    </bean>

    <bean id="wangcai_accessDecisionManager" class="com.wangcai.common.authority.AccessDecisionManagerImpl"></bean>
    <!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问     -->
    <bean id="wangcai_securityMetadataSource" class="com.wangcai.common.authority.SecurityMetadataSourceExtendImpl">
        <property name="loadUserAndResource" ref="loadUserAndResource"></property>
    </bean>
    <bean id="wangcai_userDetailService" class="com.wangcai.common.authority.UserDetailsServiceImpl"></bean>

    <bean id="loadUserAndResource" class="com.wangcai.common.authority.LoadUserAndResource"></bean>

</beans>  